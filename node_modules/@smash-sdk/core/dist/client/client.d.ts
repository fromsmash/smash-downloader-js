import { ResponseError, SDKError } from "../errors/sdkError";
import { HttpClient, HttpResponse } from "../http";
import { ClientParameters, Global, RefreshTokenMethod, Region } from "./types";
export declare class Client {
    service: string;
    token?: string;
    client: HttpClient;
    region?: Region | Global;
    host?: string;
    refreshTokenMethod?: RefreshTokenMethod;
    constructor(params: ClientParameters & {
        service: string;
    });
    parseResponse<ResponseBody, OutputBody>(response: HttpResponse<ResponseBody | ResponseError>, errors: {
        [key: string]: typeof SDKError;
    }): OutputBody;
    isValidStatusCode(code: number): boolean;
    buildRefreshTokenMethod(refreshTokenMethod: RefreshTokenMethod): RefreshTokenMethod;
}
