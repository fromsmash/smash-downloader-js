import { Region, Global } from "../client/types";
export interface RegionalHost {
    "eu-west-1"?: string;
    "eu-west-2"?: string;
    "eu-west-3"?: string;
    "eu-central-1"?: string;
    "us-east-1"?: string;
    "us-east-2"?: string;
    "us-west-1"?: string;
    "us-west-2"?: string;
    "ca-central-1"?: string;
}
export interface GlobalHost {
    global: string;
}
export interface Hosts {
    [key: string]: GlobalHost | RegionalHost;
}
declare global {
    namespace NodeJS {
        interface Global {
            smashSdkConfig?: Config;
        }
    }
    interface Window {
        smashSdkConfig?: Config;
    }
}
export declare class Config {
    private static instance;
    hosts: Hosts;
    token?: string;
    region?: Region | Global;
    static get Instance(): Config;
    constructor();
    getHost(service: keyof Hosts, region?: Region | Global): string;
    setHosts(service: string, hosts: RegionalHost | GlobalHost): void;
    setRegion(region: Region): void;
    getRegion(): Region | Global | undefined;
    setToken(token: string): void;
    getToken(): string | undefined;
}
export declare const config: Config;
