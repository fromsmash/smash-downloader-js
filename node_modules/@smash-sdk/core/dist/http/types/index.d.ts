/// <reference types="node" />
import { RefreshTokenMethod } from "../../client/types";
export declare type HttpMethod = 'GET' | 'DELETE' | 'POST' | 'PUT' | 'PATCH';
export declare type HttpQueryParameters = {
    [key: string]: string | number;
};
export declare type HttpPathParameters = {
    [key: string]: string | number;
};
export declare type HttpHeaders = {
    [key: string]: string | number;
};
export declare type HttpBodyParameters = {
    [key: string]: any;
} | string | Buffer | ArrayBuffer;
export declare type HttpResponseType = 'stream' | 'object';
export interface UploadProgressEvent {
    uploadedBytes: number;
    totalBytes: number;
    timestamp: number;
}
export declare type HttpRequestParameters = HttpRequestUrlParameters | HttpRequestHostParameters;
export interface HttpRequestUrlParameters extends HttpRequestBaseParameters {
    url: string;
    method: HttpMethod;
}
export interface HttpRequestHostParameters extends HttpRequestBaseParameters {
    host: string;
    path: string;
    method: HttpMethod;
}
interface HttpRequestBaseParameters {
    headers?: HttpHeaders;
    queryParameters?: HttpQueryParameters;
    pathParameters?: HttpPathParameters;
    bodyParameters?: HttpBodyParameters;
    timeout?: number;
    bypassErrorHandler?: boolean;
    responseType?: HttpResponseType;
    onUploadProgress?: (event: UploadProgressEvent) => void;
    refreshTokenMethod?: RefreshTokenMethod;
}
export declare type HttpResponsesParameters<OutputBody> = {
    status: number;
    headers: HttpHeaders;
    body: OutputBody;
};
export interface HttpClient {
    handle<OutputBody>(request: HttpRequest, retries?: number): Promise<HttpResponse<OutputBody>>;
}
export declare class HttpRequest {
    method: HttpMethod;
    host?: string;
    path?: string;
    url?: string;
    headers?: HttpHeaders;
    pathParameters: HttpPathParameters;
    queryParameters: HttpQueryParameters;
    bodyParameters?: HttpBodyParameters;
    timeout?: number;
    bypassErrorHandler?: boolean;
    responseType?: HttpResponseType;
    onUploadProgress?: (event: UploadProgressEvent) => void;
    refreshTokenMethod?: RefreshTokenMethod;
    constructor(params: HttpRequestParameters);
    private processPath;
    getUrl(): string;
}
export declare class HttpResponse<OutputBody> {
    statusCode: number;
    headers: HttpHeaders;
    body?: OutputBody;
    constructor(params: HttpResponsesParameters<OutputBody>);
}
export {};
