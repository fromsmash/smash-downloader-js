"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpResponse = exports.HttpRequest = void 0;
class HttpRequest {
    constructor(params) {
        this.pathParameters = {};
        this.queryParameters = {};
        this.bypassErrorHandler = false;
        this.responseType = 'object';
        this.method = params.method;
        if (params.host) {
            this.host = params.host;
        }
        if (params.path) {
            this.path = this.processPath(params.path, params.pathParameters);
        }
        if (params.url) {
            this.url = params.url;
        }
        this.headers = params.headers || {};
        this.pathParameters = params.pathParameters || {};
        this.queryParameters = params.queryParameters || {};
        this.bodyParameters = params.bodyParameters;
        this.timeout = params.timeout;
        this.bypassErrorHandler = params.bypassErrorHandler;
        if (params.responseType) {
            this.responseType = params.responseType;
        }
        if (params.onUploadProgress) {
            this.onUploadProgress = params.onUploadProgress;
        }
        if (params.refreshTokenMethod) {
            this.refreshTokenMethod = params.refreshTokenMethod;
        }
    }
    processPath(path = "/", pathParameters = {}) {
        path = path.charAt(0) !== "/" ? `/${path}` : path;
        if (pathParameters) {
            Object.keys(pathParameters).map((key) => {
                path = path.replace(':' + key, encodeURIComponent(pathParameters[key]));
            });
        }
        return path;
    }
    getUrl() {
        if (this.host) {
            return `${this.host}${this.path}`;
        }
        else {
            return this.url;
        }
    }
}
exports.HttpRequest = HttpRequest;
class HttpResponse {
    constructor(params) {
        this.statusCode = params.status;
        this.headers = params.headers || {};
        this.body = params.body;
    }
}
exports.HttpResponse = HttpResponse;
