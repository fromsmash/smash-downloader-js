import { UnknownError, NetworkError } from "@smash-sdk/core";
import { BadRequestError as CreateTeamTransferBadRequestError } from "./types/CreateTeamTransfer/CreateTeamTransferError";
import { UnauthorizedError as CreateTeamTransferUnauthorizedError } from "./types/CreateTeamTransfer/CreateTeamTransferError";
import { ForbiddenError as CreateTeamTransferForbiddenError } from "./types/CreateTeamTransfer/CreateTeamTransferError";
import { CustomUrlAlreadyInUseError as CreateTeamTransferCustomUrlAlreadyInUseError } from "./types/CreateTeamTransfer/CreateTeamTransferError";
import { InternalServerError as CreateTeamTransferInternalServerError } from "./types/CreateTeamTransfer/CreateTeamTransferError";
import { BadGatewayError as CreateTeamTransferBadGatewayError } from "./types/CreateTeamTransfer/CreateTeamTransferError";
import { GatewayTimeoutError as CreateTeamTransferGatewayTimeoutError } from "./types/CreateTeamTransfer/CreateTeamTransferError";
import { BadRequestError as CreateTransferBadRequestError } from "./types/CreateTransfer/CreateTransferError";
import { UnauthorizedError as CreateTransferUnauthorizedError } from "./types/CreateTransfer/CreateTransferError";
import { ForbiddenError as CreateTransferForbiddenError } from "./types/CreateTransfer/CreateTransferError";
import { CustomUrlAlreadyInUseError as CreateTransferCustomUrlAlreadyInUseError } from "./types/CreateTransfer/CreateTransferError";
import { InternalServerError as CreateTransferInternalServerError } from "./types/CreateTransfer/CreateTransferError";
import { BadGatewayError as CreateTransferBadGatewayError } from "./types/CreateTransfer/CreateTransferError";
import { GatewayTimeoutError as CreateTransferGatewayTimeoutError } from "./types/CreateTransfer/CreateTransferError";
import { BadRequestError as CreateTransferFileBadRequestError } from "./types/CreateTransferFile/CreateTransferFileError";
import { UnauthorizedError as CreateTransferFileUnauthorizedError } from "./types/CreateTransferFile/CreateTransferFileError";
import { TransferAlreadyLockedError as CreateTransferFileTransferAlreadyLockedError } from "./types/CreateTransferFile/CreateTransferFileError";
import { TransferIsInQueueError as CreateTransferFileTransferIsInQueueError } from "./types/CreateTransferFile/CreateTransferFileError";
import { NotFoundError as CreateTransferFileNotFoundError } from "./types/CreateTransferFile/CreateTransferFileError";
import { ConflictError as CreateTransferFileConflictError } from "./types/CreateTransferFile/CreateTransferFileError";
import { InternalServerError as CreateTransferFileInternalServerError } from "./types/CreateTransferFile/CreateTransferFileError";
import { BadGatewayError as CreateTransferFileBadGatewayError } from "./types/CreateTransferFile/CreateTransferFileError";
import { GatewayTimeoutError as CreateTransferFileGatewayTimeoutError } from "./types/CreateTransferFile/CreateTransferFileError";
import { BadRequestError as CreateTransferFilePartBadRequestError } from "./types/CreateTransferFilePart/CreateTransferFilePartError";
import { UnauthorizedError as CreateTransferFilePartUnauthorizedError } from "./types/CreateTransferFilePart/CreateTransferFilePartError";
import { TransferAlreadyLockedError as CreateTransferFilePartTransferAlreadyLockedError } from "./types/CreateTransferFilePart/CreateTransferFilePartError";
import { FileAlreadyLockedError as CreateTransferFilePartFileAlreadyLockedError } from "./types/CreateTransferFilePart/CreateTransferFilePartError";
import { NotFoundError as CreateTransferFilePartNotFoundError } from "./types/CreateTransferFilePart/CreateTransferFilePartError";
import { InternalServerError as CreateTransferFilePartInternalServerError } from "./types/CreateTransferFilePart/CreateTransferFilePartError";
import { BadGatewayError as CreateTransferFilePartBadGatewayError } from "./types/CreateTransferFilePart/CreateTransferFilePartError";
import { GatewayTimeoutError as CreateTransferFilePartGatewayTimeoutError } from "./types/CreateTransferFilePart/CreateTransferFilePartError";
import { BadRequestError as CreateTransferFilePartsBadRequestError } from "./types/CreateTransferFileParts/CreateTransferFilePartsError";
import { UnauthorizedError as CreateTransferFilePartsUnauthorizedError } from "./types/CreateTransferFileParts/CreateTransferFilePartsError";
import { TransferAlreadyLockedError as CreateTransferFilePartsTransferAlreadyLockedError } from "./types/CreateTransferFileParts/CreateTransferFilePartsError";
import { FileAlreadyLockedError as CreateTransferFilePartsFileAlreadyLockedError } from "./types/CreateTransferFileParts/CreateTransferFilePartsError";
import { NotFoundError as CreateTransferFilePartsNotFoundError } from "./types/CreateTransferFileParts/CreateTransferFilePartsError";
import { InternalServerError as CreateTransferFilePartsInternalServerError } from "./types/CreateTransferFileParts/CreateTransferFilePartsError";
import { BadGatewayError as CreateTransferFilePartsBadGatewayError } from "./types/CreateTransferFileParts/CreateTransferFilePartsError";
import { GatewayTimeoutError as CreateTransferFilePartsGatewayTimeoutError } from "./types/CreateTransferFileParts/CreateTransferFilePartsError";
import { BadRequestError as CreateTransferSignedUrlsBadRequestError } from "./types/CreateTransferSignedUrls/CreateTransferSignedUrlsError";
import { UnauthorizedError as CreateTransferSignedUrlsUnauthorizedError } from "./types/CreateTransferSignedUrls/CreateTransferSignedUrlsError";
import { PasswordDoesNotMatchError as CreateTransferSignedUrlsPasswordDoesNotMatchError } from "./types/CreateTransferSignedUrls/CreateTransferSignedUrlsError";
import { NotFoundError as CreateTransferSignedUrlsNotFoundError } from "./types/CreateTransferSignedUrls/CreateTransferSignedUrlsError";
import { InternalServerError as CreateTransferSignedUrlsInternalServerError } from "./types/CreateTransferSignedUrls/CreateTransferSignedUrlsError";
import { BadGatewayError as CreateTransferSignedUrlsBadGatewayError } from "./types/CreateTransferSignedUrls/CreateTransferSignedUrlsError";
import { GatewayTimeoutError as CreateTransferSignedUrlsGatewayTimeoutError } from "./types/CreateTransferSignedUrls/CreateTransferSignedUrlsError";
import { BadRequestError as DeleteReportBadRequestError } from "./types/DeleteReport/DeleteReportError";
import { UnauthorizedError as DeleteReportUnauthorizedError } from "./types/DeleteReport/DeleteReportError";
import { TransferNotUploadedError as DeleteReportTransferNotUploadedError } from "./types/DeleteReport/DeleteReportError";
import { NotFoundError as DeleteReportNotFoundError } from "./types/DeleteReport/DeleteReportError";
import { InternalServerError as DeleteReportInternalServerError } from "./types/DeleteReport/DeleteReportError";
import { BadGatewayError as DeleteReportBadGatewayError } from "./types/DeleteReport/DeleteReportError";
import { GatewayTimeoutError as DeleteReportGatewayTimeoutError } from "./types/DeleteReport/DeleteReportError";
import { BadRequestError as DeleteTeamTransferBadRequestError } from "./types/DeleteTeamTransfer/DeleteTeamTransferError";
import { UnauthorizedError as DeleteTeamTransferUnauthorizedError } from "./types/DeleteTeamTransfer/DeleteTeamTransferError";
import { TransferNotUploadedError as DeleteTeamTransferTransferNotUploadedError } from "./types/DeleteTeamTransfer/DeleteTeamTransferError";
import { NotFoundError as DeleteTeamTransferNotFoundError } from "./types/DeleteTeamTransfer/DeleteTeamTransferError";
import { InternalServerError as DeleteTeamTransferInternalServerError } from "./types/DeleteTeamTransfer/DeleteTeamTransferError";
import { BadGatewayError as DeleteTeamTransferBadGatewayError } from "./types/DeleteTeamTransfer/DeleteTeamTransferError";
import { GatewayTimeoutError as DeleteTeamTransferGatewayTimeoutError } from "./types/DeleteTeamTransfer/DeleteTeamTransferError";
import { BadRequestError as DeleteTransferBadRequestError } from "./types/DeleteTransfer/DeleteTransferError";
import { UnauthorizedError as DeleteTransferUnauthorizedError } from "./types/DeleteTransfer/DeleteTransferError";
import { TransferNotUploadedError as DeleteTransferTransferNotUploadedError } from "./types/DeleteTransfer/DeleteTransferError";
import { NotFoundError as DeleteTransferNotFoundError } from "./types/DeleteTransfer/DeleteTransferError";
import { InternalServerError as DeleteTransferInternalServerError } from "./types/DeleteTransfer/DeleteTransferError";
import { BadGatewayError as DeleteTransferBadGatewayError } from "./types/DeleteTransfer/DeleteTransferError";
import { GatewayTimeoutError as DeleteTransferGatewayTimeoutError } from "./types/DeleteTransfer/DeleteTransferError";
import { BadRequestError as DeleteTransferFileBadRequestError } from "./types/DeleteTransferFile/DeleteTransferFileError";
import { UnauthorizedError as DeleteTransferFileUnauthorizedError } from "./types/DeleteTransferFile/DeleteTransferFileError";
import { NotFoundError as DeleteTransferFileNotFoundError } from "./types/DeleteTransferFile/DeleteTransferFileError";
import { InternalServerError as DeleteTransferFileInternalServerError } from "./types/DeleteTransferFile/DeleteTransferFileError";
import { BadGatewayError as DeleteTransferFileBadGatewayError } from "./types/DeleteTransferFile/DeleteTransferFileError";
import { GatewayTimeoutError as DeleteTransferFileGatewayTimeoutError } from "./types/DeleteTransferFile/DeleteTransferFileError";
import { BadRequestError as DeleteUserTransferBadRequestError } from "./types/DeleteUserTransfer/DeleteUserTransferError";
import { UnauthorizedError as DeleteUserTransferUnauthorizedError } from "./types/DeleteUserTransfer/DeleteUserTransferError";
import { TransferNotUploadedError as DeleteUserTransferTransferNotUploadedError } from "./types/DeleteUserTransfer/DeleteUserTransferError";
import { NotFoundError as DeleteUserTransferNotFoundError } from "./types/DeleteUserTransfer/DeleteUserTransferError";
import { InternalServerError as DeleteUserTransferInternalServerError } from "./types/DeleteUserTransfer/DeleteUserTransferError";
import { BadGatewayError as DeleteUserTransferBadGatewayError } from "./types/DeleteUserTransfer/DeleteUserTransferError";
import { GatewayTimeoutError as DeleteUserTransferGatewayTimeoutError } from "./types/DeleteUserTransfer/DeleteUserTransferError";
import { BadRequestError as GetMetricStatisticBadRequestError } from "./types/GetMetricStatistic/GetMetricStatisticError";
import { UnauthorizedError as GetMetricStatisticUnauthorizedError } from "./types/GetMetricStatistic/GetMetricStatisticError";
import { InternalServerError as GetMetricStatisticInternalServerError } from "./types/GetMetricStatistic/GetMetricStatisticError";
import { BadGatewayError as GetMetricStatisticBadGatewayError } from "./types/GetMetricStatistic/GetMetricStatisticError";
import { GatewayTimeoutError as GetMetricStatisticGatewayTimeoutError } from "./types/GetMetricStatistic/GetMetricStatisticError";
import { BadRequestError as GetReportBadRequestError } from "./types/GetReport/GetReportError";
import { UnauthorizedError as GetReportUnauthorizedError } from "./types/GetReport/GetReportError";
import { NotFoundError as GetReportNotFoundError } from "./types/GetReport/GetReportError";
import { InternalServerError as GetReportInternalServerError } from "./types/GetReport/GetReportError";
import { BadGatewayError as GetReportBadGatewayError } from "./types/GetReport/GetReportError";
import { GatewayTimeoutError as GetReportGatewayTimeoutError } from "./types/GetReport/GetReportError";
import { BadRequestError as GetTeamMetricStatisticBadRequestError } from "./types/GetTeamMetricStatistic/GetTeamMetricStatisticError";
import { UnauthorizedError as GetTeamMetricStatisticUnauthorizedError } from "./types/GetTeamMetricStatistic/GetTeamMetricStatisticError";
import { InternalServerError as GetTeamMetricStatisticInternalServerError } from "./types/GetTeamMetricStatistic/GetTeamMetricStatisticError";
import { BadGatewayError as GetTeamMetricStatisticBadGatewayError } from "./types/GetTeamMetricStatistic/GetTeamMetricStatisticError";
import { GatewayTimeoutError as GetTeamMetricStatisticGatewayTimeoutError } from "./types/GetTeamMetricStatistic/GetTeamMetricStatisticError";
import { BadRequestError as GetTeamTransferBadRequestError } from "./types/GetTeamTransfer/GetTeamTransferError";
import { UnauthorizedError as GetTeamTransferUnauthorizedError } from "./types/GetTeamTransfer/GetTeamTransferError";
import { NotFoundError as GetTeamTransferNotFoundError } from "./types/GetTeamTransfer/GetTeamTransferError";
import { InternalServerError as GetTeamTransferInternalServerError } from "./types/GetTeamTransfer/GetTeamTransferError";
import { BadGatewayError as GetTeamTransferBadGatewayError } from "./types/GetTeamTransfer/GetTeamTransferError";
import { GatewayTimeoutError as GetTeamTransferGatewayTimeoutError } from "./types/GetTeamTransfer/GetTeamTransferError";
import { BadRequestError as GetTeamTransferFileBadRequestError } from "./types/GetTeamTransferFile/GetTeamTransferFileError";
import { UnauthorizedError as GetTeamTransferFileUnauthorizedError } from "./types/GetTeamTransferFile/GetTeamTransferFileError";
import { ForbiddenError as GetTeamTransferFileForbiddenError } from "./types/GetTeamTransferFile/GetTeamTransferFileError";
import { NotFoundError as GetTeamTransferFileNotFoundError } from "./types/GetTeamTransferFile/GetTeamTransferFileError";
import { InternalServerError as GetTeamTransferFileInternalServerError } from "./types/GetTeamTransferFile/GetTeamTransferFileError";
import { BadGatewayError as GetTeamTransferFileBadGatewayError } from "./types/GetTeamTransferFile/GetTeamTransferFileError";
import { GatewayTimeoutError as GetTeamTransferFileGatewayTimeoutError } from "./types/GetTeamTransferFile/GetTeamTransferFileError";
import { BadRequestError as GetTeamTransferQueueBadRequestError } from "./types/GetTeamTransferQueue/GetTeamTransferQueueError";
import { UnauthorizedError as GetTeamTransferQueueUnauthorizedError } from "./types/GetTeamTransferQueue/GetTeamTransferQueueError";
import { NotFoundError as GetTeamTransferQueueNotFoundError } from "./types/GetTeamTransferQueue/GetTeamTransferQueueError";
import { InternalServerError as GetTeamTransferQueueInternalServerError } from "./types/GetTeamTransferQueue/GetTeamTransferQueueError";
import { BadGatewayError as GetTeamTransferQueueBadGatewayError } from "./types/GetTeamTransferQueue/GetTeamTransferQueueError";
import { GatewayTimeoutError as GetTeamTransferQueueGatewayTimeoutError } from "./types/GetTeamTransferQueue/GetTeamTransferQueueError";
import { BadRequestError as GetTeamUserMetricStatisticBadRequestError } from "./types/GetTeamUserMetricStatistic/GetTeamUserMetricStatisticError";
import { UnauthorizedError as GetTeamUserMetricStatisticUnauthorizedError } from "./types/GetTeamUserMetricStatistic/GetTeamUserMetricStatisticError";
import { InternalServerError as GetTeamUserMetricStatisticInternalServerError } from "./types/GetTeamUserMetricStatistic/GetTeamUserMetricStatisticError";
import { BadGatewayError as GetTeamUserMetricStatisticBadGatewayError } from "./types/GetTeamUserMetricStatistic/GetTeamUserMetricStatisticError";
import { GatewayTimeoutError as GetTeamUserMetricStatisticGatewayTimeoutError } from "./types/GetTeamUserMetricStatistic/GetTeamUserMetricStatisticError";
import { BadRequestError as GetTransferBadRequestError } from "./types/GetTransfer/GetTransferError";
import { UnauthorizedError as GetTransferUnauthorizedError } from "./types/GetTransfer/GetTransferError";
import { NotFoundError as GetTransferNotFoundError } from "./types/GetTransfer/GetTransferError";
import { InternalServerError as GetTransferInternalServerError } from "./types/GetTransfer/GetTransferError";
import { BadGatewayError as GetTransferBadGatewayError } from "./types/GetTransfer/GetTransferError";
import { GatewayTimeoutError as GetTransferGatewayTimeoutError } from "./types/GetTransfer/GetTransferError";
import { BadRequestError as GetTransferFileBadRequestError } from "./types/GetTransferFile/GetTransferFileError";
import { UnauthorizedError as GetTransferFileUnauthorizedError } from "./types/GetTransferFile/GetTransferFileError";
import { NotFoundError as GetTransferFileNotFoundError } from "./types/GetTransferFile/GetTransferFileError";
import { InternalServerError as GetTransferFileInternalServerError } from "./types/GetTransferFile/GetTransferFileError";
import { BadGatewayError as GetTransferFileBadGatewayError } from "./types/GetTransferFile/GetTransferFileError";
import { GatewayTimeoutError as GetTransferFileGatewayTimeoutError } from "./types/GetTransferFile/GetTransferFileError";
import { BadRequestError as GetTransferFilePreviewBadRequestError } from "./types/GetTransferFilePreview/GetTransferFilePreviewError";
import { UnauthorizedError as GetTransferFilePreviewUnauthorizedError } from "./types/GetTransferFilePreview/GetTransferFilePreviewError";
import { PasswordDoesNotMatchError as GetTransferFilePreviewPasswordDoesNotMatchError } from "./types/GetTransferFilePreview/GetTransferFilePreviewError";
import { NotFoundError as GetTransferFilePreviewNotFoundError } from "./types/GetTransferFilePreview/GetTransferFilePreviewError";
import { InternalServerError as GetTransferFilePreviewInternalServerError } from "./types/GetTransferFilePreview/GetTransferFilePreviewError";
import { BadGatewayError as GetTransferFilePreviewBadGatewayError } from "./types/GetTransferFilePreview/GetTransferFilePreviewError";
import { GatewayTimeoutError as GetTransferFilePreviewGatewayTimeoutError } from "./types/GetTransferFilePreview/GetTransferFilePreviewError";
import { BadRequestError as GetTransferPreviewBadRequestError } from "./types/GetTransferPreview/GetTransferPreviewError";
import { UnauthorizedError as GetTransferPreviewUnauthorizedError } from "./types/GetTransferPreview/GetTransferPreviewError";
import { PasswordDoesNotMatchError as GetTransferPreviewPasswordDoesNotMatchError } from "./types/GetTransferPreview/GetTransferPreviewError";
import { InvalidEmailError as GetTransferPreviewInvalidEmailError } from "./types/GetTransferPreview/GetTransferPreviewError";
import { NotFoundError as GetTransferPreviewNotFoundError } from "./types/GetTransferPreview/GetTransferPreviewError";
import { InternalServerError as GetTransferPreviewInternalServerError } from "./types/GetTransferPreview/GetTransferPreviewError";
import { BadGatewayError as GetTransferPreviewBadGatewayError } from "./types/GetTransferPreview/GetTransferPreviewError";
import { GatewayTimeoutError as GetTransferPreviewGatewayTimeoutError } from "./types/GetTransferPreview/GetTransferPreviewError";
import { BadRequestError as GetTransferQueueBadRequestError } from "./types/GetTransferQueue/GetTransferQueueError";
import { UnauthorizedError as GetTransferQueueUnauthorizedError } from "./types/GetTransferQueue/GetTransferQueueError";
import { NotFoundError as GetTransferQueueNotFoundError } from "./types/GetTransferQueue/GetTransferQueueError";
import { InternalServerError as GetTransferQueueInternalServerError } from "./types/GetTransferQueue/GetTransferQueueError";
import { BadGatewayError as GetTransferQueueBadGatewayError } from "./types/GetTransferQueue/GetTransferQueueError";
import { GatewayTimeoutError as GetTransferQueueGatewayTimeoutError } from "./types/GetTransferQueue/GetTransferQueueError";
import { BadRequestError as GetUserMetricStatisticBadRequestError } from "./types/GetUserMetricStatistic/GetUserMetricStatisticError";
import { UnauthorizedError as GetUserMetricStatisticUnauthorizedError } from "./types/GetUserMetricStatistic/GetUserMetricStatisticError";
import { InternalServerError as GetUserMetricStatisticInternalServerError } from "./types/GetUserMetricStatistic/GetUserMetricStatisticError";
import { BadGatewayError as GetUserMetricStatisticBadGatewayError } from "./types/GetUserMetricStatistic/GetUserMetricStatisticError";
import { GatewayTimeoutError as GetUserMetricStatisticGatewayTimeoutError } from "./types/GetUserMetricStatistic/GetUserMetricStatisticError";
import { BadRequestError as GetUserTransferBadRequestError } from "./types/GetUserTransfer/GetUserTransferError";
import { UnauthorizedError as GetUserTransferUnauthorizedError } from "./types/GetUserTransfer/GetUserTransferError";
import { NotFoundError as GetUserTransferNotFoundError } from "./types/GetUserTransfer/GetUserTransferError";
import { InternalServerError as GetUserTransferInternalServerError } from "./types/GetUserTransfer/GetUserTransferError";
import { BadGatewayError as GetUserTransferBadGatewayError } from "./types/GetUserTransfer/GetUserTransferError";
import { GatewayTimeoutError as GetUserTransferGatewayTimeoutError } from "./types/GetUserTransfer/GetUserTransferError";
import { BadRequestError as GetUserTransferFileBadRequestError } from "./types/GetUserTransferFile/GetUserTransferFileError";
import { UnauthorizedError as GetUserTransferFileUnauthorizedError } from "./types/GetUserTransferFile/GetUserTransferFileError";
import { NotFoundError as GetUserTransferFileNotFoundError } from "./types/GetUserTransferFile/GetUserTransferFileError";
import { InternalServerError as GetUserTransferFileInternalServerError } from "./types/GetUserTransferFile/GetUserTransferFileError";
import { BadGatewayError as GetUserTransferFileBadGatewayError } from "./types/GetUserTransferFile/GetUserTransferFileError";
import { GatewayTimeoutError as GetUserTransferFileGatewayTimeoutError } from "./types/GetUserTransferFile/GetUserTransferFileError";
import { BadRequestError as ListTeamTransferEventsBadRequestError } from "./types/ListTeamTransferEvents/ListTeamTransferEventsError";
import { UnauthorizedError as ListTeamTransferEventsUnauthorizedError } from "./types/ListTeamTransferEvents/ListTeamTransferEventsError";
import { NotFoundError as ListTeamTransferEventsNotFoundError } from "./types/ListTeamTransferEvents/ListTeamTransferEventsError";
import { InternalServerError as ListTeamTransferEventsInternalServerError } from "./types/ListTeamTransferEvents/ListTeamTransferEventsError";
import { BadGatewayError as ListTeamTransferEventsBadGatewayError } from "./types/ListTeamTransferEvents/ListTeamTransferEventsError";
import { GatewayTimeoutError as ListTeamTransferEventsGatewayTimeoutError } from "./types/ListTeamTransferEvents/ListTeamTransferEventsError";
import { BadRequestError as ListTeamTransferFilesBadRequestError } from "./types/ListTeamTransferFiles/ListTeamTransferFilesError";
import { UnauthorizedError as ListTeamTransferFilesUnauthorizedError } from "./types/ListTeamTransferFiles/ListTeamTransferFilesError";
import { ForbiddenError as ListTeamTransferFilesForbiddenError } from "./types/ListTeamTransferFiles/ListTeamTransferFilesError";
import { NotFoundError as ListTeamTransferFilesNotFoundError } from "./types/ListTeamTransferFiles/ListTeamTransferFilesError";
import { InternalServerError as ListTeamTransferFilesInternalServerError } from "./types/ListTeamTransferFiles/ListTeamTransferFilesError";
import { BadGatewayError as ListTeamTransferFilesBadGatewayError } from "./types/ListTeamTransferFiles/ListTeamTransferFilesError";
import { GatewayTimeoutError as ListTeamTransferFilesGatewayTimeoutError } from "./types/ListTeamTransferFiles/ListTeamTransferFilesError";
import { BadRequestError as ListTeamTransfersBadRequestError } from "./types/ListTeamTransfers/ListTeamTransfersError";
import { UnauthorizedError as ListTeamTransfersUnauthorizedError } from "./types/ListTeamTransfers/ListTeamTransfersError";
import { ForbiddenError as ListTeamTransfersForbiddenError } from "./types/ListTeamTransfers/ListTeamTransfersError";
import { NotFoundError as ListTeamTransfersNotFoundError } from "./types/ListTeamTransfers/ListTeamTransfersError";
import { InternalServerError as ListTeamTransfersInternalServerError } from "./types/ListTeamTransfers/ListTeamTransfersError";
import { BadGatewayError as ListTeamTransfersBadGatewayError } from "./types/ListTeamTransfers/ListTeamTransfersError";
import { GatewayTimeoutError as ListTeamTransfersGatewayTimeoutError } from "./types/ListTeamTransfers/ListTeamTransfersError";
import { BadRequestError as ListTeamUserTransfersBadRequestError } from "./types/ListTeamUserTransfers/ListTeamUserTransfersError";
import { UnauthorizedError as ListTeamUserTransfersUnauthorizedError } from "./types/ListTeamUserTransfers/ListTeamUserTransfersError";
import { InternalServerError as ListTeamUserTransfersInternalServerError } from "./types/ListTeamUserTransfers/ListTeamUserTransfersError";
import { BadGatewayError as ListTeamUserTransfersBadGatewayError } from "./types/ListTeamUserTransfers/ListTeamUserTransfersError";
import { GatewayTimeoutError as ListTeamUserTransfersGatewayTimeoutError } from "./types/ListTeamUserTransfers/ListTeamUserTransfersError";
import { BadRequestError as ListTransferEventsBadRequestError } from "./types/ListTransferEvents/ListTransferEventsError";
import { UnauthorizedError as ListTransferEventsUnauthorizedError } from "./types/ListTransferEvents/ListTransferEventsError";
import { NotFoundError as ListTransferEventsNotFoundError } from "./types/ListTransferEvents/ListTransferEventsError";
import { InternalServerError as ListTransferEventsInternalServerError } from "./types/ListTransferEvents/ListTransferEventsError";
import { BadGatewayError as ListTransferEventsBadGatewayError } from "./types/ListTransferEvents/ListTransferEventsError";
import { GatewayTimeoutError as ListTransferEventsGatewayTimeoutError } from "./types/ListTransferEvents/ListTransferEventsError";
import { BadRequestError as ListTransferFilesBadRequestError } from "./types/ListTransferFiles/ListTransferFilesError";
import { UnauthorizedError as ListTransferFilesUnauthorizedError } from "./types/ListTransferFiles/ListTransferFilesError";
import { NotFoundError as ListTransferFilesNotFoundError } from "./types/ListTransferFiles/ListTransferFilesError";
import { InternalServerError as ListTransferFilesInternalServerError } from "./types/ListTransferFiles/ListTransferFilesError";
import { BadGatewayError as ListTransferFilesBadGatewayError } from "./types/ListTransferFiles/ListTransferFilesError";
import { GatewayTimeoutError as ListTransferFilesGatewayTimeoutError } from "./types/ListTransferFiles/ListTransferFilesError";
import { BadRequestError as ListTransferFilesPreviewBadRequestError } from "./types/ListTransferFilesPreview/ListTransferFilesPreviewError";
import { UnauthorizedError as ListTransferFilesPreviewUnauthorizedError } from "./types/ListTransferFilesPreview/ListTransferFilesPreviewError";
import { PasswordDoesNotMatchError as ListTransferFilesPreviewPasswordDoesNotMatchError } from "./types/ListTransferFilesPreview/ListTransferFilesPreviewError";
import { NotFoundError as ListTransferFilesPreviewNotFoundError } from "./types/ListTransferFilesPreview/ListTransferFilesPreviewError";
import { InternalServerError as ListTransferFilesPreviewInternalServerError } from "./types/ListTransferFilesPreview/ListTransferFilesPreviewError";
import { BadGatewayError as ListTransferFilesPreviewBadGatewayError } from "./types/ListTransferFilesPreview/ListTransferFilesPreviewError";
import { GatewayTimeoutError as ListTransferFilesPreviewGatewayTimeoutError } from "./types/ListTransferFilesPreview/ListTransferFilesPreviewError";
import { BadRequestError as ListTransfersBadRequestError } from "./types/ListTransfers/ListTransfersError";
import { UnauthorizedError as ListTransfersUnauthorizedError } from "./types/ListTransfers/ListTransfersError";
import { NotFoundError as ListTransfersNotFoundError } from "./types/ListTransfers/ListTransfersError";
import { InternalServerError as ListTransfersInternalServerError } from "./types/ListTransfers/ListTransfersError";
import { BadGatewayError as ListTransfersBadGatewayError } from "./types/ListTransfers/ListTransfersError";
import { GatewayTimeoutError as ListTransfersGatewayTimeoutError } from "./types/ListTransfers/ListTransfersError";
import { BadRequestError as ListUserTransferEventsBadRequestError } from "./types/ListUserTransferEvents/ListUserTransferEventsError";
import { UnauthorizedError as ListUserTransferEventsUnauthorizedError } from "./types/ListUserTransferEvents/ListUserTransferEventsError";
import { NotFoundError as ListUserTransferEventsNotFoundError } from "./types/ListUserTransferEvents/ListUserTransferEventsError";
import { InternalServerError as ListUserTransferEventsInternalServerError } from "./types/ListUserTransferEvents/ListUserTransferEventsError";
import { BadGatewayError as ListUserTransferEventsBadGatewayError } from "./types/ListUserTransferEvents/ListUserTransferEventsError";
import { GatewayTimeoutError as ListUserTransferEventsGatewayTimeoutError } from "./types/ListUserTransferEvents/ListUserTransferEventsError";
import { BadRequestError as ListUserTransferFilesBadRequestError } from "./types/ListUserTransferFiles/ListUserTransferFilesError";
import { UnauthorizedError as ListUserTransferFilesUnauthorizedError } from "./types/ListUserTransferFiles/ListUserTransferFilesError";
import { NotFoundError as ListUserTransferFilesNotFoundError } from "./types/ListUserTransferFiles/ListUserTransferFilesError";
import { InternalServerError as ListUserTransferFilesInternalServerError } from "./types/ListUserTransferFiles/ListUserTransferFilesError";
import { BadGatewayError as ListUserTransferFilesBadGatewayError } from "./types/ListUserTransferFiles/ListUserTransferFilesError";
import { GatewayTimeoutError as ListUserTransferFilesGatewayTimeoutError } from "./types/ListUserTransferFiles/ListUserTransferFilesError";
import { BadRequestError as ListUserTransfersBadRequestError } from "./types/ListUserTransfers/ListUserTransfersError";
import { UnauthorizedError as ListUserTransfersUnauthorizedError } from "./types/ListUserTransfers/ListUserTransfersError";
import { NotFoundError as ListUserTransfersNotFoundError } from "./types/ListUserTransfers/ListUserTransfersError";
import { InternalServerError as ListUserTransfersInternalServerError } from "./types/ListUserTransfers/ListUserTransfersError";
import { BadGatewayError as ListUserTransfersBadGatewayError } from "./types/ListUserTransfers/ListUserTransfersError";
import { GatewayTimeoutError as ListUserTransfersGatewayTimeoutError } from "./types/ListUserTransfers/ListUserTransfersError";
import { BadRequestError as LockTransferBadRequestError } from "./types/LockTransfer/LockTransferError";
import { UnauthorizedError as LockTransferUnauthorizedError } from "./types/LockTransfer/LockTransferError";
import { TransferAlreadyLockedError as LockTransferTransferAlreadyLockedError } from "./types/LockTransfer/LockTransferError";
import { TransferIsDirtyError as LockTransferTransferIsDirtyError } from "./types/LockTransfer/LockTransferError";
import { TransferIsInQueueError as LockTransferTransferIsInQueueError } from "./types/LockTransfer/LockTransferError";
import { NotFoundError as LockTransferNotFoundError } from "./types/LockTransfer/LockTransferError";
import { InternalServerError as LockTransferInternalServerError } from "./types/LockTransfer/LockTransferError";
import { BadGatewayError as LockTransferBadGatewayError } from "./types/LockTransfer/LockTransferError";
import { GatewayTimeoutError as LockTransferGatewayTimeoutError } from "./types/LockTransfer/LockTransferError";
import { BadRequestError as UpdateTransferBadRequestError } from "./types/UpdateTransfer/UpdateTransferError";
import { UnauthorizedError as UpdateTransferUnauthorizedError } from "./types/UpdateTransfer/UpdateTransferError";
import { TransferAlreadyLockedError as UpdateTransferTransferAlreadyLockedError } from "./types/UpdateTransfer/UpdateTransferError";
import { NotFoundError as UpdateTransferNotFoundError } from "./types/UpdateTransfer/UpdateTransferError";
import { InternalServerError as UpdateTransferInternalServerError } from "./types/UpdateTransfer/UpdateTransferError";
import { BadGatewayError as UpdateTransferBadGatewayError } from "./types/UpdateTransfer/UpdateTransferError";
import { GatewayTimeoutError as UpdateTransferGatewayTimeoutError } from "./types/UpdateTransfer/UpdateTransferError";
import { BadRequestError as UpdateTransferCustomizationBadRequestError } from "./types/UpdateTransferCustomization/UpdateTransferCustomizationError";
import { UnauthorizedError as UpdateTransferCustomizationUnauthorizedError } from "./types/UpdateTransferCustomization/UpdateTransferCustomizationError";
import { NotFoundError as UpdateTransferCustomizationNotFoundError } from "./types/UpdateTransferCustomization/UpdateTransferCustomizationError";
import { InternalServerError as UpdateTransferCustomizationInternalServerError } from "./types/UpdateTransferCustomization/UpdateTransferCustomizationError";
import { BadGatewayError as UpdateTransferCustomizationBadGatewayError } from "./types/UpdateTransferCustomization/UpdateTransferCustomizationError";
import { GatewayTimeoutError as UpdateTransferCustomizationGatewayTimeoutError } from "./types/UpdateTransferCustomization/UpdateTransferCustomizationError";
import { BadRequestError as UpdateTransferFileBadRequestError } from "./types/UpdateTransferFile/UpdateTransferFileError";
import { UnauthorizedError as UpdateTransferFileUnauthorizedError } from "./types/UpdateTransferFile/UpdateTransferFileError";
import { TransferAlreadyLockedError as UpdateTransferFileTransferAlreadyLockedError } from "./types/UpdateTransferFile/UpdateTransferFileError";
import { FileAlreadyLockedError as UpdateTransferFileFileAlreadyLockedError } from "./types/UpdateTransferFile/UpdateTransferFileError";
import { NotFoundError as UpdateTransferFileNotFoundError } from "./types/UpdateTransferFile/UpdateTransferFileError";
import { InternalServerError as UpdateTransferFileInternalServerError } from "./types/UpdateTransferFile/UpdateTransferFileError";
import { BadGatewayError as UpdateTransferFileBadGatewayError } from "./types/UpdateTransferFile/UpdateTransferFileError";
import { GatewayTimeoutError as UpdateTransferFileGatewayTimeoutError } from "./types/UpdateTransferFile/UpdateTransferFileError";
import { BadRequestError as UpdateTransferFilePartBadRequestError } from "./types/UpdateTransferFilePart/UpdateTransferFilePartError";
import { UnauthorizedError as UpdateTransferFilePartUnauthorizedError } from "./types/UpdateTransferFilePart/UpdateTransferFilePartError";
import { TransferAlreadyLockedError as UpdateTransferFilePartTransferAlreadyLockedError } from "./types/UpdateTransferFilePart/UpdateTransferFilePartError";
import { FileAlreadyLockedError as UpdateTransferFilePartFileAlreadyLockedError } from "./types/UpdateTransferFilePart/UpdateTransferFilePartError";
import { NotFoundError as UpdateTransferFilePartNotFoundError } from "./types/UpdateTransferFilePart/UpdateTransferFilePartError";
import { InternalServerError as UpdateTransferFilePartInternalServerError } from "./types/UpdateTransferFilePart/UpdateTransferFilePartError";
import { BadGatewayError as UpdateTransferFilePartBadGatewayError } from "./types/UpdateTransferFilePart/UpdateTransferFilePartError";
import { GatewayTimeoutError as UpdateTransferFilePartGatewayTimeoutError } from "./types/UpdateTransferFilePart/UpdateTransferFilePartError";
import { BadRequestError as UpdateTransferFilePartsBadRequestError } from "./types/UpdateTransferFileParts/UpdateTransferFilePartsError";
import { UnauthorizedError as UpdateTransferFilePartsUnauthorizedError } from "./types/UpdateTransferFileParts/UpdateTransferFilePartsError";
import { TransferAlreadyLockedError as UpdateTransferFilePartsTransferAlreadyLockedError } from "./types/UpdateTransferFileParts/UpdateTransferFilePartsError";
import { FileAlreadyLockedError as UpdateTransferFilePartsFileAlreadyLockedError } from "./types/UpdateTransferFileParts/UpdateTransferFilePartsError";
import { NotFoundError as UpdateTransferFilePartsNotFoundError } from "./types/UpdateTransferFileParts/UpdateTransferFilePartsError";
import { InternalServerError as UpdateTransferFilePartsInternalServerError } from "./types/UpdateTransferFileParts/UpdateTransferFilePartsError";
import { BadGatewayError as UpdateTransferFilePartsBadGatewayError } from "./types/UpdateTransferFileParts/UpdateTransferFilePartsError";
import { GatewayTimeoutError as UpdateTransferFilePartsGatewayTimeoutError } from "./types/UpdateTransferFileParts/UpdateTransferFilePartsError";
import { BadRequestError as DownloadBadRequestError } from "./types/Download/DownloadError";
import { UnauthorizedError as DownloadUnauthorizedError } from "./types/Download/DownloadError";
import { FobiddenError as DownloadFobiddenError } from "./types/Download/DownloadError";
import { NotFoundError as DownloadNotFoundError } from "./types/Download/DownloadError";
import { InternalServerError as DownloadInternalServerError } from "./types/Download/DownloadError";
import { BadGatewayError as DownloadBadGatewayError } from "./types/Download/DownloadError";
import { GatewayTimeoutError as DownloadGatewayTimeoutError } from "./types/Download/DownloadError";
import { BadRequestError as UploadTransferFilePartBadRequestError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InternalServerError as UploadTransferFilePartInternalServerError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { NotFoundError as UploadTransferFilePartNotFoundError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { NoSuchUploadError as UploadTransferFilePartNoSuchUploadError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { AccessControlListNotSupportedError as UploadTransferFilePartAccessControlListNotSupportedError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { AccessDeniedError as UploadTransferFilePartAccessDeniedError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { AccessPointAlreadyOwnedByYouError as UploadTransferFilePartAccessPointAlreadyOwnedByYouError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { AccountProblemError as UploadTransferFilePartAccountProblemError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { AllAccessDisabledError as UploadTransferFilePartAllAccessDisabledError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { AmbiguousGrantByEmailAddressError as UploadTransferFilePartAmbiguousGrantByEmailAddressError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { AuthorizationHeaderMalformedError as UploadTransferFilePartAuthorizationHeaderMalformedError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { BadDigestError as UploadTransferFilePartBadDigestError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { EntityTooSmallError as UploadTransferFilePartEntityTooSmallError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { EntityTooLargeError as UploadTransferFilePartEntityTooLargeError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { ExpiredTokenError as UploadTransferFilePartExpiredTokenError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { IllegalLocationConstraintExceptionError as UploadTransferFilePartIllegalLocationConstraintExceptionError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { IllegalVersioningConfigurationExceptionError as UploadTransferFilePartIllegalVersioningConfigurationExceptionError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { IncompleteBodyError as UploadTransferFilePartIncompleteBodyError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InlineDataTooLargeError as UploadTransferFilePartInlineDataTooLargeError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InternalError as UploadTransferFilePartInternalError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidAccessKeyIdError as UploadTransferFilePartInvalidAccessKeyIdError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidArgumentError as UploadTransferFilePartInvalidArgumentError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidBucketNameError as UploadTransferFilePartInvalidBucketNameError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidBucketStateError as UploadTransferFilePartInvalidBucketStateError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidDigestError as UploadTransferFilePartInvalidDigestError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidLocationConstraintError as UploadTransferFilePartInvalidLocationConstraintError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidObjectStateError as UploadTransferFilePartInvalidObjectStateError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidPartError as UploadTransferFilePartInvalidPartError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidPartOrderError as UploadTransferFilePartInvalidPartOrderError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidPayerError as UploadTransferFilePartInvalidPayerError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidPolicyDocumentError as UploadTransferFilePartInvalidPolicyDocumentError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidRangeError as UploadTransferFilePartInvalidRangeError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidRequestError as UploadTransferFilePartInvalidRequestError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidSecurityError as UploadTransferFilePartInvalidSecurityError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidTokenError as UploadTransferFilePartInvalidTokenError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { InvalidURIError as UploadTransferFilePartInvalidURIError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { KeyTooLongError as UploadTransferFilePartKeyTooLongError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { MaxMessageLengthExceededError as UploadTransferFilePartMaxMessageLengthExceededError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { MetadataTooLargeError as UploadTransferFilePartMetadataTooLargeError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { MissingContentLengthError as UploadTransferFilePartMissingContentLengthError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { MissingRequestBodyError as UploadTransferFilePartMissingRequestBodyError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { MissingSecurityHeaderError as UploadTransferFilePartMissingSecurityHeaderError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { NoSuchBucketError as UploadTransferFilePartNoSuchBucketError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { NoSuchBucketPolicyError as UploadTransferFilePartNoSuchBucketPolicyError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { NoSuchCORSConfigurationError as UploadTransferFilePartNoSuchCORSConfigurationError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { NoSuchKeyError as UploadTransferFilePartNoSuchKeyError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { NotImplementedError as UploadTransferFilePartNotImplementedError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { RequestHeaderSectionTooLargeError as UploadTransferFilePartRequestHeaderSectionTooLargeError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { RequestTimeoutError as UploadTransferFilePartRequestTimeoutError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { RequestTimeTooSkewedError as UploadTransferFilePartRequestTimeTooSkewedError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { ServerSideEncryptionConfigurationNotFoundError as UploadTransferFilePartServerSideEncryptionConfigurationNotFoundError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { ServiceUnavailableError as UploadTransferFilePartServiceUnavailableError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { SignatureDoesNotMatchError as UploadTransferFilePartSignatureDoesNotMatchError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { SlowDownError as UploadTransferFilePartSlowDownError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { TokenRefreshRequiredError as UploadTransferFilePartTokenRefreshRequiredError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { UnexpectedContentError as UploadTransferFilePartUnexpectedContentError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
import { UserKeyMustBeSpecifiedError as UploadTransferFilePartUserKeyMustBeSpecifiedError } from "./types/UploadTransferFilePart/UploadTransferFilePartError";
export declare const errors: {
    CreateTeamTransferError: {
        BadRequest: typeof CreateTeamTransferBadRequestError;
        Unauthorized: typeof CreateTeamTransferUnauthorizedError;
        Forbidden: typeof CreateTeamTransferForbiddenError;
        CustomUrlAlreadyInUse: typeof CreateTeamTransferCustomUrlAlreadyInUseError;
        InternalServerError: typeof CreateTeamTransferInternalServerError;
        BadGateway: typeof CreateTeamTransferBadGatewayError;
        GatewayTimeout: typeof CreateTeamTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    CreateTransferError: {
        BadRequest: typeof CreateTransferBadRequestError;
        Unauthorized: typeof CreateTransferUnauthorizedError;
        Forbidden: typeof CreateTransferForbiddenError;
        CustomUrlAlreadyInUse: typeof CreateTransferCustomUrlAlreadyInUseError;
        InternalServerError: typeof CreateTransferInternalServerError;
        BadGateway: typeof CreateTransferBadGatewayError;
        GatewayTimeout: typeof CreateTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    CreateTransferFileError: {
        BadRequest: typeof CreateTransferFileBadRequestError;
        Unauthorized: typeof CreateTransferFileUnauthorizedError;
        TransferAlreadyLocked: typeof CreateTransferFileTransferAlreadyLockedError;
        TransferIsInQueue: typeof CreateTransferFileTransferIsInQueueError;
        NotFound: typeof CreateTransferFileNotFoundError;
        Conflict: typeof CreateTransferFileConflictError;
        InternalServerError: typeof CreateTransferFileInternalServerError;
        BadGateway: typeof CreateTransferFileBadGatewayError;
        GatewayTimeout: typeof CreateTransferFileGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    CreateTransferFilePartError: {
        BadRequest: typeof CreateTransferFilePartBadRequestError;
        Unauthorized: typeof CreateTransferFilePartUnauthorizedError;
        TransferAlreadyLocked: typeof CreateTransferFilePartTransferAlreadyLockedError;
        FileAlreadyLocked: typeof CreateTransferFilePartFileAlreadyLockedError;
        NotFound: typeof CreateTransferFilePartNotFoundError;
        InternalServerError: typeof CreateTransferFilePartInternalServerError;
        BadGateway: typeof CreateTransferFilePartBadGatewayError;
        GatewayTimeout: typeof CreateTransferFilePartGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    CreateTransferFilePartsError: {
        BadRequest: typeof CreateTransferFilePartsBadRequestError;
        Unauthorized: typeof CreateTransferFilePartsUnauthorizedError;
        TransferAlreadyLocked: typeof CreateTransferFilePartsTransferAlreadyLockedError;
        FileAlreadyLocked: typeof CreateTransferFilePartsFileAlreadyLockedError;
        NotFound: typeof CreateTransferFilePartsNotFoundError;
        InternalServerError: typeof CreateTransferFilePartsInternalServerError;
        BadGateway: typeof CreateTransferFilePartsBadGatewayError;
        GatewayTimeout: typeof CreateTransferFilePartsGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    CreateTransferSignedUrlsError: {
        BadRequest: typeof CreateTransferSignedUrlsBadRequestError;
        Unauthorized: typeof CreateTransferSignedUrlsUnauthorizedError;
        PasswordDoesNotMatch: typeof CreateTransferSignedUrlsPasswordDoesNotMatchError;
        NotFound: typeof CreateTransferSignedUrlsNotFoundError;
        InternalServerError: typeof CreateTransferSignedUrlsInternalServerError;
        BadGateway: typeof CreateTransferSignedUrlsBadGatewayError;
        GatewayTimeout: typeof CreateTransferSignedUrlsGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    DeleteReportError: {
        BadRequest: typeof DeleteReportBadRequestError;
        Unauthorized: typeof DeleteReportUnauthorizedError;
        TransferNotUploaded: typeof DeleteReportTransferNotUploadedError;
        NotFound: typeof DeleteReportNotFoundError;
        InternalServerError: typeof DeleteReportInternalServerError;
        BadGateway: typeof DeleteReportBadGatewayError;
        GatewayTimeout: typeof DeleteReportGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    DeleteTeamTransferError: {
        BadRequest: typeof DeleteTeamTransferBadRequestError;
        Unauthorized: typeof DeleteTeamTransferUnauthorizedError;
        TransferNotUploaded: typeof DeleteTeamTransferTransferNotUploadedError;
        NotFound: typeof DeleteTeamTransferNotFoundError;
        InternalServerError: typeof DeleteTeamTransferInternalServerError;
        BadGateway: typeof DeleteTeamTransferBadGatewayError;
        GatewayTimeout: typeof DeleteTeamTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    DeleteTransferError: {
        BadRequest: typeof DeleteTransferBadRequestError;
        Unauthorized: typeof DeleteTransferUnauthorizedError;
        TransferNotUploaded: typeof DeleteTransferTransferNotUploadedError;
        NotFound: typeof DeleteTransferNotFoundError;
        InternalServerError: typeof DeleteTransferInternalServerError;
        BadGateway: typeof DeleteTransferBadGatewayError;
        GatewayTimeout: typeof DeleteTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    DeleteTransferFileError: {
        BadRequest: typeof DeleteTransferFileBadRequestError;
        Unauthorized: typeof DeleteTransferFileUnauthorizedError;
        NotFound: typeof DeleteTransferFileNotFoundError;
        InternalServerError: typeof DeleteTransferFileInternalServerError;
        BadGateway: typeof DeleteTransferFileBadGatewayError;
        GatewayTimeout: typeof DeleteTransferFileGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    DeleteUserTransferError: {
        BadRequest: typeof DeleteUserTransferBadRequestError;
        Unauthorized: typeof DeleteUserTransferUnauthorizedError;
        TransferNotUploaded: typeof DeleteUserTransferTransferNotUploadedError;
        NotFound: typeof DeleteUserTransferNotFoundError;
        InternalServerError: typeof DeleteUserTransferInternalServerError;
        BadGateway: typeof DeleteUserTransferBadGatewayError;
        GatewayTimeout: typeof DeleteUserTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetMetricStatisticError: {
        BadRequest: typeof GetMetricStatisticBadRequestError;
        Unauthorized: typeof GetMetricStatisticUnauthorizedError;
        InternalServerError: typeof GetMetricStatisticInternalServerError;
        BadGateway: typeof GetMetricStatisticBadGatewayError;
        GatewayTimeout: typeof GetMetricStatisticGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetReportError: {
        BadRequest: typeof GetReportBadRequestError;
        Unauthorized: typeof GetReportUnauthorizedError;
        NotFound: typeof GetReportNotFoundError;
        InternalServerError: typeof GetReportInternalServerError;
        BadGateway: typeof GetReportBadGatewayError;
        GatewayTimeout: typeof GetReportGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTeamMetricStatisticError: {
        BadRequest: typeof GetTeamMetricStatisticBadRequestError;
        Unauthorized: typeof GetTeamMetricStatisticUnauthorizedError;
        InternalServerError: typeof GetTeamMetricStatisticInternalServerError;
        BadGateway: typeof GetTeamMetricStatisticBadGatewayError;
        GatewayTimeout: typeof GetTeamMetricStatisticGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTeamTransferError: {
        BadRequest: typeof GetTeamTransferBadRequestError;
        Unauthorized: typeof GetTeamTransferUnauthorizedError;
        NotFound: typeof GetTeamTransferNotFoundError;
        InternalServerError: typeof GetTeamTransferInternalServerError;
        BadGateway: typeof GetTeamTransferBadGatewayError;
        GatewayTimeout: typeof GetTeamTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTeamTransferFileError: {
        BadRequest: typeof GetTeamTransferFileBadRequestError;
        Unauthorized: typeof GetTeamTransferFileUnauthorizedError;
        Forbidden: typeof GetTeamTransferFileForbiddenError;
        NotFound: typeof GetTeamTransferFileNotFoundError;
        InternalServerError: typeof GetTeamTransferFileInternalServerError;
        BadGateway: typeof GetTeamTransferFileBadGatewayError;
        GatewayTimeout: typeof GetTeamTransferFileGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTeamTransferQueueError: {
        BadRequest: typeof GetTeamTransferQueueBadRequestError;
        Unauthorized: typeof GetTeamTransferQueueUnauthorizedError;
        NotFound: typeof GetTeamTransferQueueNotFoundError;
        InternalServerError: typeof GetTeamTransferQueueInternalServerError;
        BadGateway: typeof GetTeamTransferQueueBadGatewayError;
        GatewayTimeout: typeof GetTeamTransferQueueGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTeamUserMetricStatisticError: {
        BadRequest: typeof GetTeamUserMetricStatisticBadRequestError;
        Unauthorized: typeof GetTeamUserMetricStatisticUnauthorizedError;
        InternalServerError: typeof GetTeamUserMetricStatisticInternalServerError;
        BadGateway: typeof GetTeamUserMetricStatisticBadGatewayError;
        GatewayTimeout: typeof GetTeamUserMetricStatisticGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTransferError: {
        BadRequest: typeof GetTransferBadRequestError;
        Unauthorized: typeof GetTransferUnauthorizedError;
        NotFound: typeof GetTransferNotFoundError;
        InternalServerError: typeof GetTransferInternalServerError;
        BadGateway: typeof GetTransferBadGatewayError;
        GatewayTimeout: typeof GetTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTransferFileError: {
        BadRequest: typeof GetTransferFileBadRequestError;
        Unauthorized: typeof GetTransferFileUnauthorizedError;
        NotFound: typeof GetTransferFileNotFoundError;
        InternalServerError: typeof GetTransferFileInternalServerError;
        BadGateway: typeof GetTransferFileBadGatewayError;
        GatewayTimeout: typeof GetTransferFileGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTransferFilePreviewError: {
        BadRequest: typeof GetTransferFilePreviewBadRequestError;
        Unauthorized: typeof GetTransferFilePreviewUnauthorizedError;
        PasswordDoesNotMatch: typeof GetTransferFilePreviewPasswordDoesNotMatchError;
        NotFound: typeof GetTransferFilePreviewNotFoundError;
        InternalServerError: typeof GetTransferFilePreviewInternalServerError;
        BadGateway: typeof GetTransferFilePreviewBadGatewayError;
        GatewayTimeout: typeof GetTransferFilePreviewGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTransferPreviewError: {
        BadRequest: typeof GetTransferPreviewBadRequestError;
        Unauthorized: typeof GetTransferPreviewUnauthorizedError;
        PasswordDoesNotMatch: typeof GetTransferPreviewPasswordDoesNotMatchError;
        InvalidEmail: typeof GetTransferPreviewInvalidEmailError;
        NotFound: typeof GetTransferPreviewNotFoundError;
        InternalServerError: typeof GetTransferPreviewInternalServerError;
        BadGateway: typeof GetTransferPreviewBadGatewayError;
        GatewayTimeout: typeof GetTransferPreviewGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetTransferQueueError: {
        BadRequest: typeof GetTransferQueueBadRequestError;
        Unauthorized: typeof GetTransferQueueUnauthorizedError;
        NotFound: typeof GetTransferQueueNotFoundError;
        InternalServerError: typeof GetTransferQueueInternalServerError;
        BadGateway: typeof GetTransferQueueBadGatewayError;
        GatewayTimeout: typeof GetTransferQueueGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetUserMetricStatisticError: {
        BadRequest: typeof GetUserMetricStatisticBadRequestError;
        Unauthorized: typeof GetUserMetricStatisticUnauthorizedError;
        InternalServerError: typeof GetUserMetricStatisticInternalServerError;
        BadGateway: typeof GetUserMetricStatisticBadGatewayError;
        GatewayTimeout: typeof GetUserMetricStatisticGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetUserTransferError: {
        BadRequest: typeof GetUserTransferBadRequestError;
        Unauthorized: typeof GetUserTransferUnauthorizedError;
        NotFound: typeof GetUserTransferNotFoundError;
        InternalServerError: typeof GetUserTransferInternalServerError;
        BadGateway: typeof GetUserTransferBadGatewayError;
        GatewayTimeout: typeof GetUserTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    GetUserTransferFileError: {
        BadRequest: typeof GetUserTransferFileBadRequestError;
        Unauthorized: typeof GetUserTransferFileUnauthorizedError;
        NotFound: typeof GetUserTransferFileNotFoundError;
        InternalServerError: typeof GetUserTransferFileInternalServerError;
        BadGateway: typeof GetUserTransferFileBadGatewayError;
        GatewayTimeout: typeof GetUserTransferFileGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListTeamTransferEventsError: {
        BadRequest: typeof ListTeamTransferEventsBadRequestError;
        Unauthorized: typeof ListTeamTransferEventsUnauthorizedError;
        NotFound: typeof ListTeamTransferEventsNotFoundError;
        InternalServerError: typeof ListTeamTransferEventsInternalServerError;
        BadGateway: typeof ListTeamTransferEventsBadGatewayError;
        GatewayTimeout: typeof ListTeamTransferEventsGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListTeamTransferFilesError: {
        BadRequest: typeof ListTeamTransferFilesBadRequestError;
        Unauthorized: typeof ListTeamTransferFilesUnauthorizedError;
        Forbidden: typeof ListTeamTransferFilesForbiddenError;
        NotFound: typeof ListTeamTransferFilesNotFoundError;
        InternalServerError: typeof ListTeamTransferFilesInternalServerError;
        BadGateway: typeof ListTeamTransferFilesBadGatewayError;
        GatewayTimeout: typeof ListTeamTransferFilesGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListTeamTransfersError: {
        BadRequest: typeof ListTeamTransfersBadRequestError;
        Unauthorized: typeof ListTeamTransfersUnauthorizedError;
        Forbidden: typeof ListTeamTransfersForbiddenError;
        NotFound: typeof ListTeamTransfersNotFoundError;
        InternalServerError: typeof ListTeamTransfersInternalServerError;
        BadGateway: typeof ListTeamTransfersBadGatewayError;
        GatewayTimeout: typeof ListTeamTransfersGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListTeamUserTransfersError: {
        BadRequest: typeof ListTeamUserTransfersBadRequestError;
        Unauthorized: typeof ListTeamUserTransfersUnauthorizedError;
        InternalServerError: typeof ListTeamUserTransfersInternalServerError;
        BadGateway: typeof ListTeamUserTransfersBadGatewayError;
        GatewayTimeout: typeof ListTeamUserTransfersGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListTransferEventsError: {
        BadRequest: typeof ListTransferEventsBadRequestError;
        Unauthorized: typeof ListTransferEventsUnauthorizedError;
        NotFound: typeof ListTransferEventsNotFoundError;
        InternalServerError: typeof ListTransferEventsInternalServerError;
        BadGateway: typeof ListTransferEventsBadGatewayError;
        GatewayTimeout: typeof ListTransferEventsGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListTransferFilesError: {
        BadRequest: typeof ListTransferFilesBadRequestError;
        Unauthorized: typeof ListTransferFilesUnauthorizedError;
        NotFound: typeof ListTransferFilesNotFoundError;
        InternalServerError: typeof ListTransferFilesInternalServerError;
        BadGateway: typeof ListTransferFilesBadGatewayError;
        GatewayTimeout: typeof ListTransferFilesGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListTransferFilesPreviewError: {
        BadRequest: typeof ListTransferFilesPreviewBadRequestError;
        Unauthorized: typeof ListTransferFilesPreviewUnauthorizedError;
        PasswordDoesNotMatch: typeof ListTransferFilesPreviewPasswordDoesNotMatchError;
        NotFound: typeof ListTransferFilesPreviewNotFoundError;
        InternalServerError: typeof ListTransferFilesPreviewInternalServerError;
        BadGateway: typeof ListTransferFilesPreviewBadGatewayError;
        GatewayTimeout: typeof ListTransferFilesPreviewGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListTransfersError: {
        BadRequest: typeof ListTransfersBadRequestError;
        Unauthorized: typeof ListTransfersUnauthorizedError;
        NotFound: typeof ListTransfersNotFoundError;
        InternalServerError: typeof ListTransfersInternalServerError;
        BadGateway: typeof ListTransfersBadGatewayError;
        GatewayTimeout: typeof ListTransfersGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListUserTransferEventsError: {
        BadRequest: typeof ListUserTransferEventsBadRequestError;
        Unauthorized: typeof ListUserTransferEventsUnauthorizedError;
        NotFound: typeof ListUserTransferEventsNotFoundError;
        InternalServerError: typeof ListUserTransferEventsInternalServerError;
        BadGateway: typeof ListUserTransferEventsBadGatewayError;
        GatewayTimeout: typeof ListUserTransferEventsGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListUserTransferFilesError: {
        BadRequest: typeof ListUserTransferFilesBadRequestError;
        Unauthorized: typeof ListUserTransferFilesUnauthorizedError;
        NotFound: typeof ListUserTransferFilesNotFoundError;
        InternalServerError: typeof ListUserTransferFilesInternalServerError;
        BadGateway: typeof ListUserTransferFilesBadGatewayError;
        GatewayTimeout: typeof ListUserTransferFilesGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    ListUserTransfersError: {
        BadRequest: typeof ListUserTransfersBadRequestError;
        Unauthorized: typeof ListUserTransfersUnauthorizedError;
        NotFound: typeof ListUserTransfersNotFoundError;
        InternalServerError: typeof ListUserTransfersInternalServerError;
        BadGateway: typeof ListUserTransfersBadGatewayError;
        GatewayTimeout: typeof ListUserTransfersGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    LockTransferError: {
        BadRequest: typeof LockTransferBadRequestError;
        Unauthorized: typeof LockTransferUnauthorizedError;
        TransferAlreadyLocked: typeof LockTransferTransferAlreadyLockedError;
        TransferIsDirty: typeof LockTransferTransferIsDirtyError;
        TransferIsInQueue: typeof LockTransferTransferIsInQueueError;
        NotFound: typeof LockTransferNotFoundError;
        InternalServerError: typeof LockTransferInternalServerError;
        BadGateway: typeof LockTransferBadGatewayError;
        GatewayTimeout: typeof LockTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    UpdateTransferError: {
        BadRequest: typeof UpdateTransferBadRequestError;
        Unauthorized: typeof UpdateTransferUnauthorizedError;
        TransferAlreadyLocked: typeof UpdateTransferTransferAlreadyLockedError;
        NotFound: typeof UpdateTransferNotFoundError;
        InternalServerError: typeof UpdateTransferInternalServerError;
        BadGateway: typeof UpdateTransferBadGatewayError;
        GatewayTimeout: typeof UpdateTransferGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    UpdateTransferCustomizationError: {
        BadRequest: typeof UpdateTransferCustomizationBadRequestError;
        Unauthorized: typeof UpdateTransferCustomizationUnauthorizedError;
        NotFound: typeof UpdateTransferCustomizationNotFoundError;
        InternalServerError: typeof UpdateTransferCustomizationInternalServerError;
        BadGateway: typeof UpdateTransferCustomizationBadGatewayError;
        GatewayTimeout: typeof UpdateTransferCustomizationGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    UpdateTransferFileError: {
        BadRequest: typeof UpdateTransferFileBadRequestError;
        Unauthorized: typeof UpdateTransferFileUnauthorizedError;
        TransferAlreadyLocked: typeof UpdateTransferFileTransferAlreadyLockedError;
        FileAlreadyLocked: typeof UpdateTransferFileFileAlreadyLockedError;
        NotFound: typeof UpdateTransferFileNotFoundError;
        InternalServerError: typeof UpdateTransferFileInternalServerError;
        BadGateway: typeof UpdateTransferFileBadGatewayError;
        GatewayTimeout: typeof UpdateTransferFileGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    UpdateTransferFilePartError: {
        BadRequest: typeof UpdateTransferFilePartBadRequestError;
        Unauthorized: typeof UpdateTransferFilePartUnauthorizedError;
        TransferAlreadyLocked: typeof UpdateTransferFilePartTransferAlreadyLockedError;
        FileAlreadyLocked: typeof UpdateTransferFilePartFileAlreadyLockedError;
        NotFound: typeof UpdateTransferFilePartNotFoundError;
        InternalServerError: typeof UpdateTransferFilePartInternalServerError;
        BadGateway: typeof UpdateTransferFilePartBadGatewayError;
        GatewayTimeout: typeof UpdateTransferFilePartGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    UpdateTransferFilePartsError: {
        BadRequest: typeof UpdateTransferFilePartsBadRequestError;
        Unauthorized: typeof UpdateTransferFilePartsUnauthorizedError;
        TransferAlreadyLocked: typeof UpdateTransferFilePartsTransferAlreadyLockedError;
        FileAlreadyLocked: typeof UpdateTransferFilePartsFileAlreadyLockedError;
        NotFound: typeof UpdateTransferFilePartsNotFoundError;
        InternalServerError: typeof UpdateTransferFilePartsInternalServerError;
        BadGateway: typeof UpdateTransferFilePartsBadGatewayError;
        GatewayTimeout: typeof UpdateTransferFilePartsGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    DownloadError: {
        BadRequest: typeof DownloadBadRequestError;
        Unauthorized: typeof DownloadUnauthorizedError;
        Fobidden: typeof DownloadFobiddenError;
        NotFound: typeof DownloadNotFoundError;
        InternalServer: typeof DownloadInternalServerError;
        BadGateway: typeof DownloadBadGatewayError;
        GatewayTimeout: typeof DownloadGatewayTimeoutError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
    UploadTransferFilePartError: {
        BadRequest: typeof UploadTransferFilePartBadRequestError;
        InternalServer: typeof UploadTransferFilePartInternalServerError;
        NotFound: typeof UploadTransferFilePartNotFoundError;
        NoSuchUpload: typeof UploadTransferFilePartNoSuchUploadError;
        AccessControlListNotSupported: typeof UploadTransferFilePartAccessControlListNotSupportedError;
        AccessDenied: typeof UploadTransferFilePartAccessDeniedError;
        AccessPointAlreadyOwnedByYou: typeof UploadTransferFilePartAccessPointAlreadyOwnedByYouError;
        AccountProblem: typeof UploadTransferFilePartAccountProblemError;
        AllAccessDisabled: typeof UploadTransferFilePartAllAccessDisabledError;
        AmbiguousGrantByEmailAddress: typeof UploadTransferFilePartAmbiguousGrantByEmailAddressError;
        AuthorizationHeaderMalformed: typeof UploadTransferFilePartAuthorizationHeaderMalformedError;
        BadDigest: typeof UploadTransferFilePartBadDigestError;
        EntityTooSmall: typeof UploadTransferFilePartEntityTooSmallError;
        EntityTooLarge: typeof UploadTransferFilePartEntityTooLargeError;
        ExpiredToken: typeof UploadTransferFilePartExpiredTokenError;
        IllegalLocationConstraintException: typeof UploadTransferFilePartIllegalLocationConstraintExceptionError;
        IllegalVersioningConfigurationException: typeof UploadTransferFilePartIllegalVersioningConfigurationExceptionError;
        IncompleteBody: typeof UploadTransferFilePartIncompleteBodyError;
        InlineDataTooLarge: typeof UploadTransferFilePartInlineDataTooLargeError;
        Internal: typeof UploadTransferFilePartInternalError;
        InvalidAccessKeyId: typeof UploadTransferFilePartInvalidAccessKeyIdError;
        InvalidArgument: typeof UploadTransferFilePartInvalidArgumentError;
        InvalidBucketName: typeof UploadTransferFilePartInvalidBucketNameError;
        InvalidBucketState: typeof UploadTransferFilePartInvalidBucketStateError;
        InvalidDigest: typeof UploadTransferFilePartInvalidDigestError;
        InvalidLocationConstraint: typeof UploadTransferFilePartInvalidLocationConstraintError;
        InvalidObjectState: typeof UploadTransferFilePartInvalidObjectStateError;
        InvalidPart: typeof UploadTransferFilePartInvalidPartError;
        InvalidPartOrder: typeof UploadTransferFilePartInvalidPartOrderError;
        InvalidPayer: typeof UploadTransferFilePartInvalidPayerError;
        InvalidPolicyDocument: typeof UploadTransferFilePartInvalidPolicyDocumentError;
        InvalidRange: typeof UploadTransferFilePartInvalidRangeError;
        InvalidRequest: typeof UploadTransferFilePartInvalidRequestError;
        InvalidSecurity: typeof UploadTransferFilePartInvalidSecurityError;
        InvalidToken: typeof UploadTransferFilePartInvalidTokenError;
        InvalidURI: typeof UploadTransferFilePartInvalidURIError;
        KeyTooLong: typeof UploadTransferFilePartKeyTooLongError;
        MaxMessageLengthExceeded: typeof UploadTransferFilePartMaxMessageLengthExceededError;
        MetadataTooLarge: typeof UploadTransferFilePartMetadataTooLargeError;
        MissingContentLength: typeof UploadTransferFilePartMissingContentLengthError;
        MissingRequestBody: typeof UploadTransferFilePartMissingRequestBodyError;
        MissingSecurityHeader: typeof UploadTransferFilePartMissingSecurityHeaderError;
        NoSuchBucket: typeof UploadTransferFilePartNoSuchBucketError;
        NoSuchBucketPolicy: typeof UploadTransferFilePartNoSuchBucketPolicyError;
        NoSuchCORSConfiguration: typeof UploadTransferFilePartNoSuchCORSConfigurationError;
        NoSuchKey: typeof UploadTransferFilePartNoSuchKeyError;
        NotImplemented: typeof UploadTransferFilePartNotImplementedError;
        RequestHeaderSectionTooLarge: typeof UploadTransferFilePartRequestHeaderSectionTooLargeError;
        RequestTimeout: typeof UploadTransferFilePartRequestTimeoutError;
        RequestTimeTooSkewed: typeof UploadTransferFilePartRequestTimeTooSkewedError;
        ServerSideEncryptionConfigurationNotFound: typeof UploadTransferFilePartServerSideEncryptionConfigurationNotFoundError;
        ServiceUnavailable: typeof UploadTransferFilePartServiceUnavailableError;
        SignatureDoesNotMatch: typeof UploadTransferFilePartSignatureDoesNotMatchError;
        SlowDown: typeof UploadTransferFilePartSlowDownError;
        TokenRefreshRequired: typeof UploadTransferFilePartTokenRefreshRequiredError;
        UnexpectedContent: typeof UploadTransferFilePartUnexpectedContentError;
        UserKeyMustBeSpecified: typeof UploadTransferFilePartUserKeyMustBeSpecifiedError;
        UnknownError: typeof UnknownError;
        NetworkError: typeof NetworkError;
    };
};
